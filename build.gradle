plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'ru.manager'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

jar {
  manifest {
    attributes "Main-Class": "ru.manager.task.TaskApplication"
  }

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
////////////////////
//build angular build
///////////////////

processResources {
  dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
  // installAngular should be run prior to this task
  dependsOn "installAngular"
  // Add task to the standard build group
  group = BasePlugin.BUILD_GROUP
  // ng doesn't exist as a file in windows -> ng.cmd
  if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
    commandLine "ng.cmd", "build"
  } else {
    commandLine "ng", "build"
  }
}

task installAngular(type:Exec) {
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
    commandLine "npm.cmd", "install"
  } else {
    commandLine "npm", "install"
  }
}
